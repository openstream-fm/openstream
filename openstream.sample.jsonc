/// this file can contain comments
/// you can mark it as "JSON with Comments" if you are using VSCode 
/// also, in VSCode, the .jsonc file extension does the trick
{
  // mongodb related settings
  "mongodb": {
    // string (required)
    // must have a defined database in the path and a replicaSet in the query params
    // internally openstream uses transactions so replicaSet is required
    "url": "mongodb://localhost:27017/openstream?replicaSet=rs1",

    // string (optional)
    // storage database 
    "storage_db_name": "openstream_storage"
  },

  // the [stream] server is where end users will connect to listen to the stations
  "stream": {
    // string(SocketAddr)[] (required)
    // socket addrs to bind the stream server to
    "addrs": [ "0.0.0.0:10200" ]
  },

  // the [source] server is where openstream receives the audio data from streamers, it is Icecast compatible
  "source": {
    // string(SocketAddr)[] (required)
    // socket addrs to bind the source receiver server to
    "addrs": [ "0.0.0.0:10600" ]
  },

  // the [api] server is the main interface for users and admins to interact with openstream server
  "api": {
    // string(SocketAddr)[] (required)
    // socket addrs to bind the api server to
    "addrs": [ "0.0.0.0:10700" ]
  },

  // the [storage] server is the interface to access user's files like stored audio tracks and images
  "storage": {
    // string(SocketAddr)[] (required)
    // socket addrs to bind the api server to
    "addrs": [ "0.0.0.0:10900" ]
  },

  // smtp related settings for mail delivery
  // smtp server must use StartTLS on the specified port
  "smtp": {
    // string (required)
    "hostname": "",
    // u16 (required)
    "port": 587,
    // string (required)
    "username": "",
    // string (required)
    "password": ""
  }
}